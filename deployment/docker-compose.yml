version: "3.5"
services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8080:80"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  reverseproxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    restart: unless-stopped
    container_name: reverseproxy
    depends_on:
      - brewbrain
    labels:
      - traefik.enable=true
      - traefik.http.services.brew_brain_rp.loadbalancer.server.port=8080
      - traefik.http.routers.brew_brain_rp.rule=PathPrefix(`/`)
      - traefik.http.routers.brew_brain_rp.entrypoints=web
    environment:
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_COOKIE_SECRET: "dK2sEgUuqjmdDLZ1M8iwdOOAuHtdXcv8"
    volumes:
      - ./oauthproxy/oauth.yaml:/oauth.yaml
    command: --alpha-config /oauth.yaml --auth-logging

  brewbrain:
    container_name: brewbrain
    build: ../backend/
    environment:
      RAILS_ENV: development
      BREWBRAIN_DATABASE_URL: postgres-master
      BREWBRAIN_DATABASE_PASSWORD: postgres
      BREWBRAIN_DATABASE_SCHEMA: brewbrain
      BREWBRAIN_DATABASE_USER: brewbrain

  postgres:
    container_name: postgres-master
    image: postgres
    #restart: always
    volumes:
      - postgres_datavolume:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: brewbrain
      POSTGRES_DB: brewbrain
    ports:
      - 5432:5432

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    labels:
      - traefik.enable=true
      - traefik.http.routers.kc.entrypoints=web
      - traefik.http.routers.kc.rule=PathPrefix(`/auth`)
      - traefik.http.services.kc.loadbalancer.server.port=8080
    environment:
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: adminadmin
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command: start-dev --http-relative-path /auth --import-realm --log-level=INFO

volumes:
  postgres_datavolume:
