{
  "id": "63eb78d5-7e79-42e2-b205-314b9d9ee832",
  "realm": "brewbrain",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "d00629e4-8012-4447-be95-9fa5a41a03db",
        "name": "default-roles-brewbrain",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "63eb78d5-7e79-42e2-b205-314b9d9ee832",
        "attributes": {}
      },
      {
        "id": "3170fd62-d8e4-468d-9e3e-cb52e7ad5e49",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "63eb78d5-7e79-42e2-b205-314b9d9ee832",
        "attributes": {}
      },
      {
        "id": "8d737521-b04f-4803-9ecb-562bdb200b17",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "63eb78d5-7e79-42e2-b205-314b9d9ee832",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "6f2e5470-5378-440a-b377-dfd5669b0655",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "8569ec5e-0417-489c-b500-c0bb058fa443",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "fec87da0-07c2-4ac5-b051-fa82418e5f18",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "58aedbf0-cc46-4c91-b61c-74bd37b41bb9",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "27df569d-4e71-403f-9a79-4e613224f81a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "c9918c70-470c-425e-9dac-e5494b3bca14",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "9e2f7bb1-f52a-44f6-9f13-186e7624be5d",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "0afdcaac-a449-45b4-822a-2acdeeb03da8",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "0a63980c-ecc3-4279-b757-dbcf3b914ecb",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "527e5fac-f5e7-437b-bde9-2f6ccea8ce1e",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "8df721d8-7439-4a26-a9fa-0df0524fb497",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-events",
                "view-users",
                "manage-authorization",
                "manage-realm",
                "query-groups",
                "view-realm",
                "query-realms",
                "manage-users",
                "impersonation",
                "query-users",
                "query-clients",
                "view-identity-providers",
                "manage-identity-providers",
                "create-client",
                "manage-clients",
                "view-clients",
                "view-authorization",
                "manage-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "e5e374ee-02db-4ca1-b413-fd11966d89f4",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "c3694ae2-4c1d-4086-84d4-581bdb455ec4",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "b964ca62-c4b3-481e-b240-b33bafb690b8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "2ef0f6ef-a26a-4e6f-822c-5b975f53caba",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "2e27c6be-7c3a-463b-af10-5e7f1df1aee0",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "2f490e3d-706d-47a3-8a4a-2945c3f0ff22",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "930e6c75-8f06-4fb0-9ab6-ae98f6cf088e",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        },
        {
          "id": "4024666b-6791-4e6b-94d3-4574dca1c762",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "brewbrain": [
        {
          "id": "54d132b1-2f78-49a0-9937-3a771f3f2c9c",
          "name": "brewbrain-admin",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "8a66ff37-6ee5-4b51-bb38-46b6cc55d0e2",
          "attributes": {}
        },
        {
          "id": "9683d3d4-f43e-43c3-9868-3afe88e45208",
          "name": "brewbrain-user",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "8a66ff37-6ee5-4b51-bb38-46b6cc55d0e2",
          "attributes": {}
        }
      ],
      "broker": [
        {
          "id": "a7fbfea0-cbb8-451f-9ca2-195f700f6705",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "a01855ee-12aa-42ee-a519-9285a0bea08f",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "8abede11-8a6a-4d70-9e49-4bf0d118fb2b",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        },
        {
          "id": "0342a554-c373-4900-afe3-77be6ae17fac",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        },
        {
          "id": "90323806-9fc7-4b6e-bfc9-2c74e2c4ea21",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        },
        {
          "id": "73f4c90b-3f81-4c32-95ba-605bb86d98aa",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        },
        {
          "id": "7161fb06-1629-435b-886d-4b4565549ab7",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        },
        {
          "id": "23147d31-e2ce-4d60-96e8-e3768de8b563",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        },
        {
          "id": "ae351281-1391-44db-9d9c-03f190b88080",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        },
        {
          "id": "d11ab1e7-0aa1-484e-928e-f6ba5c24572d",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "547dc9d7-f870-496d-874f-35d0ed560fd6",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "d00629e4-8012-4447-be95-9fa5a41a03db",
    "name": "default-roles-brewbrain",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "63eb78d5-7e79-42e2-b205-314b9d9ee832"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppFreeOTPName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "c9e8cc77-3452-4190-8fda-cb63e1c59dfb",
      "createdTimestamp": 1693977383646,
      "username": "brewbrain",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Brew",
      "lastName": "Brain",
      "email": "brewbrain@jeestinger.de",
      "credentials": [
        {
          "id": "249ce017-adf1-4201-b834-6c83c84ce4a0",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693977396379,
          "secretData": "{\"value\":\"8spjQaprTvZyitVC0qq94pX/ss+Vu9Was036XyTbr0U=\",\"salt\":\"1MU2Hn6oXGp9J7GXplD2Tg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-brewbrain"],
      "clientRoles": {
        "brewbrain": ["brewbrain-user"]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "547dc9d7-f870-496d-874f-35d0ed560fd6",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/brewbrain/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/brewbrain/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0128e382-8c93-4cde-9ff4-a189ae790131",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/brewbrain/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/brewbrain/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1d56afe1-0dc9-488b-b9a9-96a386fdad50",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cd019f65-87a7-4df0-9b7f-89b698935733",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8a66ff37-6ee5-4b51-bb38-46b6cc55d0e2",
      "clientId": "brewbrain",
      "name": "Brew Brain",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "2CHqjWzaztwrBbRiqZrGjJZ5rxbgRndg",
      "redirectUris": ["*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1693977221",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "84dbd77b-2a4e-4b3f-9291-a3bfcec4a562",
          "name": "OAuth2 Proxy Aud",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "brewbrain",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "included.custom.audience": "brewbrain"
          }
        },
        {
          "id": "b8ad9f6e-d181-402e-a255-9ebc4e76414d",
          "name": "OAuth2 Proxy groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a01855ee-12aa-42ee-a519-9285a0bea08f",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8d011d7d-e4f6-45f1-9686-36fdf6228f36",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c85de4ff-88f0-4874-b1bf-a5006a77db86",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/brewbrain/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/brewbrain/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f4691811-97f5-4233-b762-064cac618964",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "c83f7ef9-4c49-4627-922b-0390601e32b9",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "8cd5afe8-fa0e-4959-b29b-2e50a841096b",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a5a999e0-3c11-4336-8186-f51e896c90ad",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "36f617dc-ffe3-4ccb-8222-fae7ea83e23e",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "0dad3b44-a268-4e1d-ada5-62d1a46b201a",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "dcb95b15-dd33-4128-b27d-d318031b1d2a",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "178f0f78-ecd1-4a68-8af3-255c4e7215e1",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "ce236984-1f4f-4e76-8397-8cce568fc3ce",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "61695128-d794-4055-a055-53f0f510a6bc",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a0f11b33-0a73-4549-989a-a0e48f58e982",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a5482cc3-b5c1-4769-aa6f-fc8132872b0d",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "af1a4bae-6fe7-4d5f-a969-7dbd19da13b8",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "54f427e9-4772-48b3-ab80-06fa40bb1c17",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "93e0a896-16bd-4533-9035-eec4b56bea53",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "cefceb86-7c35-40a7-8f83-b6889b60fe7f",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7e022202-2a88-45a3-8514-366dd763c2f9",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8f33dbe8-c8a5-4a27-b637-2fe51a68020a",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4d453476-3bcd-4854-80b4-e2acbcd5baf0",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "89556b79-e9cc-4d5d-8b70-0df2b8da9673",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "6bf26af9-efaf-4939-a294-1601c08ce307",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1db10987-582d-404c-9230-4d6d85238cf1",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "08eb1d11-b7ac-45d4-8a14-e98dc94e21b7",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "19f09969-cb40-463e-896e-89f73a5d0451",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1d544411-a6b8-4136-8781-5843ecc7c6df",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "05984b17-ced4-4d78-b66f-276cc1ffd14c",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "18d3965b-ba44-45f5-888c-1b9b5d6e36cc",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2e8b6880-c035-4e0c-902e-83a13f72a1af",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dc3c9a01-41df-4526-974f-d97aace8a532",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "df2bc2d7-d80f-400d-85a3-82f7ae86181b",
      "name": "test",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "0e058fad-70d6-493d-80ef-489ebe908a40",
          "name": "OAuth2 Proxy groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "d16ac045-1a03-42d2-a6d8-6b85f6967e9d",
          "name": "OAuth2 Proxy Aud",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "brewbrain",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "included.custom.audience": "brewbrain"
          }
        }
      ]
    },
    {
      "id": "a7385783-869d-4ec7-9f38-724a66fa1d40",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "9afafa22-0c28-4163-8c57-d6f574e4be43",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "504d5d35-904a-458c-9247-909ab4edacd4",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "90bca5dc-859f-43bf-aab3-fb3bf0502acb",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "bfb2ac26-413f-42c9-a721-1c9b19a61bd9",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b0f0cbd1-fbc6-4cbc-9fe8-b8fd02471614",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "13ec4e70-1d10-412b-9677-d59c53c1178c",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "773ce2b6-1fad-4dc5-b25e-c54f876f68ac",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "895326d3-536a-4fb9-a55a-b11ac3a79965",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "test"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "87f90919-5390-41c2-a3f9-c0d110689779",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "54dfe9c0-6451-437a-b7e9-c62d12555db6",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "820900ec-19d1-4e6e-8fe6-19feb9930587",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "ec479506-e092-4dc0-a93a-997c1bf862e4",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "4ec5cd1a-56fd-44bf-852d-4f36d6897de0",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "85e122a5-4f19-4bbc-8da9-2dd457135280",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "75f83c15-15ed-44a0-a3f6-3efe61303d3e",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "80f74cbf-bbcc-4c84-8b7f-979fafe118a2",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "6c60f263-2a33-403a-8f1d-f7f50262b810",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["bc6f79b4-db9d-4d57-a8a7-19bba38c331c"],
          "secret": [
            "uh_YrM4zIrm9Nn08pjPEZtu6N6HQmVQTDRsEoNJoYgTWtMqE0YTt2XodEvbEdsG3CU8tNmljcC5K0iIIZWd3SQ"
          ],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      },
      {
        "id": "116007c8-b06b-4bfc-b0de-d36480846527",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAud4MIwP6cdgPLDmk0WW9yflmk0jQICdD7dfR8eCjdbvJWTTK3h47WoxrMxOmf7tV2JL17FbtjwmPNTBG0TCRJSUOcerVbdwUl5N91ZLNaw8mQkmXPXYzwrtY0ShpeXtwPaKyHn5a0Sn8XyWrCgi52B2TZIcQ4fG+QtPeXuid/GSMkmjnij2Ql2LqCiVigqUXIyfs0oAxlsnW8zj7wK5GYNpPeySjMCxq3kObvH3+X34XOMUwmvtC/tN8g2mKMZtDZGS+3BsKYC7XJBWbxxMss7V+Z9ixN0rWA6vtn63eSKmAu7ZaKRBwAsylFTOHiczRvyl2Fg+J84xReing9WgtnQIDAQABAoIBAC0r5Wg3Jc04NMvLQJ6xatQk3ESMTCScVlp9+qSdsyxAVLls5qbf0w35FW6G5o6hgUYOxVzIbZi3OoozLurVMllELcQKzg8SjyCddFYNBQZxWpt+lhaWXRMFBBtlBmlDUi5wlXhqvfiaix62oWBhaYU3/uPOHZDD9zj3k9IeF5NIk+rQXno75HoMsTaOJ05GoYWWh1pXBZC1Yj1Iiu/Ison7XAAdMJWplskO893up54zuIKUA5h1st4FYTb+UvnahcFR61jkEOji8y6/zOagAiwYNqlRPcorPqLyfq2C+c0rYHmPcqLdzcFAVYAFoMJeopVIeyuTizWYkvNh9H/xtDECgYEA8u2hjSIF62AvjufW+ubQRER6tXBcW6zOlflql1Oc7U8JoxXFFeXG3b0pg6EAHzkgOXQ+2sUAtrhcas1kNnprCXAp3fmKtibHLPZjUcgOGkkwf+/qvywvkuTJZVdokpdYaZ2JYwxmaQGiFhVo2x6XZp+2TCxm4vzZb2rQAU88fXUCgYEAw95lLPWi4UGxhgMoxb2Jfl0ISTPDi3gO3Q5uYLEgQiF60Am086MA3zX8GG5CJOygq2orwxlwjrTuARwdY3bPBjGqY5mw40HSQjdbQqLRyWtv/7CD85RslfcHuxzOqkVYO3vRM8xE0qV8QsKRdz3qyPcjXvO/xLRF8t1j445xookCgYBniksqGU9GlFeQ5FXn2Mr53eojPUHQPSZMG+OHnjarmt1zqkq3W5lYV1DDbrLbnACVHGvR2NfGCWwyhVpqMeE/Q5RErSCnJH4ONvH8IHWKVJmcXgjC9LVOOb9xN0E2AdXIJkIxek6IAQ8xtGxdwHstXXNYojA0HSsb5v3DIR+aJQKBgAVLwhiRG7JTgGVLOJMAKPONuGeiSqs+t8gqV7mtkF25YgS1/nqH8cIXR5WxhYBSFZYM7Nn9mhmBst280N6bm8VjGmRPB4Vdhj3cGU+X72wux3x2XVr8rGLxpvfcM4pPDa+uDV4FK+c2KkHz2NMMjYiZhg9PL+Q1q56Bde31MAVhAoGABD00a4Z+hliuB0IK9UEJhtWoHf/I9XPDSJjtIZ9uutR57/7sFuK0PAJ/Z1ZNcjGNCA18iDQl92APOMhBPO0atE4ei9NUcpfLH/rkjhoA4eMZ26NWCPwIr1r6ud2shPnI1RYD7hgKL3gnbMAXgj8k44rx1XnZw7nO0rJ2rsmQWac="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICoTCCAYkCBgGKaOf4uDANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlicmV3YnJhaW4wHhcNMjMwOTA2MDUxMDQ3WhcNMzMwOTA2MDUxMjI3WjAUMRIwEAYDVQQDDAlicmV3YnJhaW4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC53gwjA/px2A8sOaTRZb3J+WaTSNAgJ0Pt19Hx4KN1u8lZNMreHjtajGszE6Z/u1XYkvXsVu2PCY81MEbRMJElJQ5x6tVt3BSXk33Vks1rDyZCSZc9djPCu1jRKGl5e3A9orIeflrRKfxfJasKCLnYHZNkhxDh8b5C095e6J38ZIySaOeKPZCXYuoKJWKCpRcjJ+zSgDGWydbzOPvArkZg2k97JKMwLGreQ5u8ff5ffhc4xTCa+0L+03yDaYoxm0NkZL7cGwpgLtckFZvHEyyztX5n2LE3StYDq+2frd5IqYC7tlopEHACzKUVM4eJzNG/KXYWD4nzjFF6KeD1aC2dAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAF4hckJEMVatCki/uY/5LYOm1dKTxoq50Sv3jo10Dl1s6KrB5mH6A99OzvAkYU1SJ1ZBGcgREH5ayX2MnkBXw8Bd2QuekuerKQrUd4Z8U8xyG0ZOpA59litQ8VSZPreN0cm1YntKIH2yadYxWIwCpjJUoHnc/7ud1iNs8/L35CyGWb2m29Yh/3dWEQzPYCXs7IdjzEakabpIYgJ7bKNJiOAJAJlT7NJSg9f5XX9+BW3D3UhGe7+7Q0e6oFOKHUxURy+2y3D/hVsvjRTY5r/WHATnbtyrcsT60IF+juFcreZgltIFcAV/ZtbbOnKspfNA+rXZ/Usm7TO95snwSZS6/uk="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "a9b973b7-b200-44b0-980e-294f63869820",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAsyPqYUXGg+WY9SPDkWxVHSPxaZnsBgy0JXCS2IiPmgOd5lhxEnRncvZeT9l2kLINl0mqCDOl1gXXyTJsy/Nov5jMapU8jiN2WjC5PUCGVaWEmEN8c5EiexwnU/tQJMygqb9DgkKvLlPmp9r4d5KnWzbTye768HC1rYJwIqz7H0g+U7ipfyZOUO5ZdhPbhGCzm1E5BnsifO565/5REZcmTAsBygkG20mX95CELY8DBbtCE5yMF8xP834K3VcWgWrC77dxl06LCmzQkyR52jfGHIATtWfrrnDAwsad5Yxzxiyb3/2mO8F9ozfAHJPF8cW8gj+GN4N+7GwHA30iajD/7wIDAQABAoIBADiwPeRIU1i72FqC1cl4MbsF+8hCKDmF3aAXbrDNDjxbtqUFCcsgQPhVVGUKWQXTApAEhKURywHeWXnW1iz4OwaekNmNnlsQh8xkrMngWGJT/ZC9km1z2SiCMUPXPHZYtuLgnrli5tLPRCeMGKKmKwWnZP/6+zgJQsTEiT2/5bvw9N8z1UjgQM60mJGH9L2NzpaTIy5JncikcBfK4gR6W8fvyYIXh6786u1dUHbOVbsoxkzne6cjgPi7QsFOpto2Zo1HqZqu2oaeoqgJpFOeY9Qp5RzuIErXM9sChUMPqr0FcB3saALSjw7t3dhz44q+xcmjSjLdY7rfT4iVPtRCnZECgYEA9Nm4rL+eimGrKk9+RL2/tFtgxvBXL4w2okyCcaZ6Giy2ew8d9L1oYgZa3y8dMh8l9gleLeUFwkr/NNoPj00JDeZNaWEL23ZW+lz+D+sRmNiR0NZ0l2T9CnC3jIjbBkusK/inG3qmVKDnDzxI+SAHxrBQ/dSc/747Z0309bSdgUkCgYEAu0wyBf9RIpzf0yZuAtcjZW2EKwR3auH6D+FmZY4XZyrT4pUiE/MWn7BaDHvPyI//M7Oqjii2oNzE21zwv6R/hUUU+MP2dbEtiJwIaeTYcRm+IQOFwxk0uZ0eD/KcTCERahj6jl5GGyc2RxwW22bm2VZuHwqosihQUWaYcFXRr3cCgYEAoZefHcNI6qMSx9W2y78+6dT0xdaQc7zhwbMk08S/CM9Bj22mo4LthOQUzP7XEeEkuH/uO/POHTBJxaO0aSq6MwYvSMDXhntPY+RDeFX3QxyK/3zJbbEknuNM/97CTiFa+5obDzOe2nNmitOKhX/yIdrzWNIc21u88KyuYgpVeKECgYAsnVLRIOc3wnyCdIYCATM6RuMTyCWV/SwuujdE+5rRhV8hevq6G86IzV412Qw+ryZQL3zyDfqqyMvPoQzr6YhCu5jqROuhT0oUX26VouB32HT0sj0boxZvHGD71YOrkrjuN/L/FK/IagfA2o0LSDC3FqJ2nHhgr7+qFDE9mQOwswKBgHtyZExR1UQB8X2k2RdlvJ1C+6L8eDWD4ByAZKzITig9kxbVtGXISk3Md8qk82hW596YC1M3QerhuDnC/ry8rspoGwDUD0aLTdzXY4J5i8DsWihD2/244mfT+YNmqj0kvggGcHUSakkocA432YUo9frmpBB/d0xkPp1C4BVzcsWM"
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICoTCCAYkCBgGKaOf5/zANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlicmV3YnJhaW4wHhcNMjMwOTA2MDUxMDQ3WhcNMzMwOTA2MDUxMjI3WjAUMRIwEAYDVQQDDAlicmV3YnJhaW4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzI+phRcaD5Zj1I8ORbFUdI/FpmewGDLQlcJLYiI+aA53mWHESdGdy9l5P2XaQsg2XSaoIM6XWBdfJMmzL82i/mMxqlTyOI3ZaMLk9QIZVpYSYQ3xzkSJ7HCdT+1AkzKCpv0OCQq8uU+an2vh3kqdbNtPJ7vrwcLWtgnAirPsfSD5TuKl/Jk5Q7ll2E9uEYLObUTkGeyJ87nrn/lERlyZMCwHKCQbbSZf3kIQtjwMFu0ITnIwXzE/zfgrdVxaBasLvt3GXTosKbNCTJHnaN8YcgBO1Z+uucMDCxp3ljHPGLJvf/aY7wX2jN8Ack8XxxbyCP4Y3g37sbAcDfSJqMP/vAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACn1PXVRpZgymSdMgdStUrg5zaWuzu98Cl8NcV2Y5U8XoWr0+gWUF8lYVrTbd3eb8/YxvAvGXHARlKRprscnz+pEWuRRAc/sS+sgzdNOS6p2V/OD1YFh0cf/+09pStQ82ZhlWfESS5dqEtYC+eB5vwDdKdhCVbfr/txNskCrN66qfxdmrkUkymvQbYOd5OMzXn7tJ5NGtYtcaJkOq+avYtNnPmBKxsNDilOsW6AvK9u33fIXPBoqZTc6MwOatMLSHgDXH9m+oZuVm7Zkt3h510iFdz+yu1RRxhcZuNElsvw9ZpZ7V7phTu0Hxt39D7XQiZOvY7mjO/U6TJrCA43K0FM="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "c10f21a1-78b2-455e-99db-888672044945",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["805adc1b-297d-4c52-bd92-084e33ac3d3e"],
          "secret": ["_EFAo1VGfqkyfNPxiOlfpg"],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "dd09a5ab-8e8a-4ed4-a677-6a9a3539fced",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f5afa048-3472-49d9-b52e-9ff5aed5df80",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0accecfe-3e7e-4bb1-8478-488be8b6a823",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "45cc5d00-30b9-41c2-9e18-acdc247fe025",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f1e1c9ac-37bb-46a4-8586-0a5042b52d7a",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bad87f62-a9c0-4f4d-a0d9-fc801bea3826",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "99a99a65-5b7e-4fd3-8e32-f3a4c0ece01d",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "096ffa11-cc06-46c2-b3ca-cd82baa24966",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f7eade0-e3b6-43c1-ab56-8b2ef1a5ff6c",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "509aaefa-f642-4bff-9141-757877db5990",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "07306a45-313d-4daf-a91b-2724e5b3542f",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "91436f3d-161a-4ebc-878a-2ad0e8e15f20",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b861ceeb-1ff4-4280-bb63-74c1c504f425",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0212c708-9727-4286-901a-10e12db8db08",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "39888d39-4178-43df-8664-af1346c75ebb",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0e0fd04a-cf79-4481-a595-3045ca2fae7d",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5f3fb766-f332-471c-9a36-ec9383472a62",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0a6e6a9b-6010-4b03-9b84-467cebc9e282",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "ee2f04cf-27c8-4bbd-93ef-599c6d3a366b",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "8873441f-38a6-464b-ba32-583036afd254",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "22.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
